<%- include('partials/header') %>

  <section class="gallery">
    <h2>Gallery</h2>
    <div class="gallery-posts">
      <% if (posts.length> 0) { %>
        <% posts.forEach(function(post) { %>
          <div class="gallery-card">
            <p><strong>Uploaded By:</strong>
              <%= post.fname %>
                <%= post.lname %>
            </p>
            <div class="image-container">
              <img src="<%= post.image_url %>" class="gallery-image" alt="<%= post.description %>">
            </div>
            <div class="post-details">
              <p>
                <%= post.description %>
              </p>
              <div class="post-like-comment">
                <div class="l-c-s-d-option">
                  <a href="javascript:void(0);" onclick="toggleLike(<%= post.post_id %>)">
                    <i id="like-icon-<%= post.post_id %>" class="bx <%= post.user_liked ? 'bxs-heart' : 'bx-heart' %>"
                      style='color:#00eaff' title="<%= post.user_liked ? 'Unlike' : 'Like' %>"></i>
                    <span id="like-count-<%= post.post_id %>">
                      <%= post.like_count %>
                    </span>
                  </a>
                </div>
                <div class="l-c-s-d-option">
                  <i class='bx bx-message-rounded-dots' title="Comment"
                    onclick="toggleCommentSection('<%= post.post_id %>')"></i>
                  <span>
                    <%= post.comment_count %>
                  </span>
                </div>

                <div class="l-c-s-d-option">
                  <i id="share-icon-<%= post.post_id %>" class="bx bx-share" title="Share"
                     onclick="sharePost(<%= post.post_id %>, '<%= post.image_url %>', '<%= post.description %>')">
                  </i>
                  <span id="share-count-<%= post.post_id %>"><%= post.share_count %></span>
                </div>
                
                
                
              </div>
              <div class="comment-section" id="comment-section-<%= post.post_id %>" style="display: none;">
                <form onsubmit="submitComment(event, <%= post.post_id %>)">
                  <input type="hidden" name="post_id" value="<%= post.post_id %>">
                  <textarea name="comment" id="comment-text-<%= post.post_id %>" placeholder="Write a comment..."
                    required></textarea>
                  <button type="submit" class="submit-comment" title="Post"><i class='bx bxs-send'></i></button>
                </form>
                <div class="comments-list">
                  <% post.comments.forEach(function(comment) { %>
                    <div class="comment">
                      <p><strong>
                          <%= comment.username %>:
                        </strong>
                        <%= comment.comment %>
                      </p>
                    </div>
                    <% }); %>
                </div>
              </div>
            </div>
          </div>
          <% }); %>
            <% } else { %>
              <p>No posts found.</p>
              <% } %>
    </div>
  </section>

  <script src="https://unpkg.com/scrollreveal"></script>
  <script>
    ScrollReveal({
      reset: true,
      distance: "60px",
      duration: 2000,
      delay: 200
    });

    ScrollReveal().reveal('', { origin: `top` });
    ScrollReveal().reveal('.gallery-card', { origin: `bottom` });
    ScrollReveal().reveal('.left', { origin: `left` });
    ScrollReveal().reveal('.right', { origin: `right` });

    function toggleLike(postId) {
      // Perform AJAX request to toggle like/dislike
      fetch('/like', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ post_id: postId })
      })
        .then(response => response.json())
        .then(data => {
          // Update UI based on action
          const likeIcon = document.getElementById('like-icon-' + postId);
          const likeCount = document.getElementById('like-count-' + postId);

          // Toggle like icon based on the response
          if (likeIcon.classList.contains('bx-heart')) {
            likeIcon.classList.remove('bx-heart');
            likeIcon.classList.add('bxs-heart');
            likeIcon.title = 'Unlike';
          } else {
            likeIcon.classList.remove('bxs-heart');
            likeIcon.classList.add('bx-heart');
            likeIcon.title = 'Like';
          }

          // Update like count dynamically
          likeCount.textContent = data.like_count;
        })
        .catch(err => console.error('Error toggling like:', err));
    }


    function toggleCommentSection(postId) {
      let section = document.getElementById("comment-section-" + postId);
      section.style.display = section.style.display === "none" ? "block" : "none";
    }

    
    function submitComment(event, postId) {
      event.preventDefault(); // Prevent page reload

      const commentText = document.getElementById(`comment-text-${postId}`).value;
      if (!commentText.trim()) return;

      fetch('/comment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ post_id: postId, comment: commentText })
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Append new comment to the UI
            const commentList = document.querySelector(`#comment-section-${postId} .comments-list`);
            const newComment = document.createElement("div");
            newComment.classList.add("comment");
            newComment.innerHTML = `<p><strong>${data.fname} ${data.lname}:</strong> ${commentText}</p>`;
            commentList.appendChild(newComment);

            // Update comment count
            const commentCount = document.querySelector(`#comment-section-${postId} ~ .post-like-comment span`);
            commentCount.textContent = data.comment_count;

            // Clear textarea
            document.getElementById(`comment-text-${postId}`).value = '';
          } else {
            alert("Error posting comment");
          }
        })
        .catch(err => console.error("Error submitting comment:", err));
    }

    function sharePost(postId, imageUrl, description) {
    const postUrl = `${window.location.origin}/gallery/${postId}`;
    const title = "Check out this post!";
    const text = description;

    if (navigator.share) {
        navigator.share({
            title: title,
            text: text,
            url: postUrl
        }).then(() => {
            updateShareCount(postId);
        }).catch(console.error);
    } else {
        alert("Sharing is not supported on this device.");
    }
}

function updateShareCount(postId) {
    fetch(`/update-share-count/${postId}`, { method: "POST" })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById(`share-count-${postId}`).innerText = data.newCount;
            }
        })
        .catch(console.error);
}



  </script>

  <%- include('partials/footer') %>